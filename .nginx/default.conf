# https://www.acunetix.com/blog/web-security-zone/hardening-nginx/

upstream nextjs_upstream {
  server localhost:3000;

  # We could add additional servers here for load-balancing
}

server {
  listen $PORT default_server;

  if ($http_x_forwarded_proto != 'https') {
    rewrite ^(.*) https://$host$request_uri redirect;
  }

  server_name _;

  server_tokens off;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  # hide how is app powered. In this case hide NextJS is running behind the scenes.
  proxy_hide_header X-Powered-By;

  # set client request body buffer size to 1k. Usually 8k
  client_body_buffer_size 1k;
  client_header_buffer_size 1k;
  client_max_body_size 1k;
  large_client_header_buffers 2 1k;

  # ONLY respond to requests from HTTPS
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  # to prevent click-jacking
  add_header X-Frame-Options "DENY";

  # don't load scripts or CSS if their MIME type as indicated by the server is incorrect
  add_header X-Content-Type-Options nosniff;

  add_header 'Referrer-Policy' 'no-referrer';

  # NOTE: Content Security Policy is defined in src/pages/_document.tsx
  #       this is due to the need of using a nonce.
  #       defining CSP here will override the CSP in src/pages/_document.tsx
  # Content Security Policy (CSP) and X-XSS-Protection (XSS)
  # add_header Content-Security-Policy "
  # default-src 'self'; 
  # script-src 'self'; 
  # object-src 'none'; 
  # style-src 'self' https://fonts.googleapis.com ; 
  # font-src fonts.gstatic.com ;
  # form-action 'none'; 
  # frame-ancestors 'none'; 
  # base-uri 'none';" always;
  add_header X-XSS-Protection "1; mode=block";

  add_header 'X-Download-Options' "noopen";

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  location / {
    # limit request types to HTTP GET
    # ignore everything else
    limit_except GET { deny all; }

    proxy_pass http://nextjs_upstream;
  }
}